ARM GAS  /tmp/ccKkhfOO.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/system/usart.c"
  18              		.section	.text._write,"ax",%progbits
  19              		.align	1
  20              		.global	_write
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_write:
  26              	.LVL0:
  27              	.LFB68:
   1:Core/system/usart.c **** #include "sys.h"
   2:Core/system/usart.c **** #include "usart.h"
   3:Core/system/usart.c **** 
   4:Core/system/usart.c **** /* 如果使用os,则包括下面的头文件即可. */
   5:Core/system/usart.c **** #if SYS_SUPPORT_OS
   6:Core/system/usart.c **** #include "os.h"   /* os 使用 */
   7:Core/system/usart.c **** #endif
   8:Core/system/usart.c **** 
   9:Core/system/usart.c **** 
  10:Core/system/usart.c **** 
  11:Core/system/usart.c **** /******************************************************************************************/
  12:Core/system/usart.c **** /* 加入以下代码, 支持printf函数, 而不需要选择use MicroLIB */
  13:Core/system/usart.c **** #include <stdio.h>
  14:Core/system/usart.c **** 
  15:Core/system/usart.c **** #ifdef __GNUC__
  16:Core/system/usart.c **** int _write(int fd, char *ptr, int len)  
  17:Core/system/usart.c **** {  
  28              		.loc 1 17 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 17 1 is_stmt 0 view .LVU1
  34 0000 1046     		mov	r0, r2
  35              	.LVL1:
  18:Core/system/usart.c ****     for (int t = 0; t < len; t++)
  36              		.loc 1 18 5 is_stmt 1 view .LVU2
  37              	.LBB2:
  38              		.loc 1 18 10 view .LVU3
  39              		.loc 1 18 14 is_stmt 0 view .LVU4
  40 0002 4FF0000C 		mov	ip, #0
ARM GAS  /tmp/ccKkhfOO.s 			page 2


  41              		.loc 1 18 5 view .LVU5
  42 0006 0AE0     		b	.L2
  43              	.LVL2:
  44              	.L4:
  19:Core/system/usart.c ****     {
  20:Core/system/usart.c ****         // while ((USART_UX->SR & 0X40) == 0); /* 等待发送结束 */
  21:Core/system/usart.c ****         USART_UX->DR = ptr[t];
  45              		.loc 1 21 9 is_stmt 1 view .LVU6
  46              		.loc 1 21 27 is_stmt 0 view .LVU7
  47 0008 11F80C20 		ldrb	r2, [r1, ip]	@ zero_extendqisi2
  48              		.loc 1 21 22 view .LVU8
  49 000c 054B     		ldr	r3, .L5
  50 000e 5A60     		str	r2, [r3, #4]
  22:Core/system/usart.c ****         while ((USART_UX->SR & 0X40) == 0); /* 等待发送结束 */
  51              		.loc 1 22 9 is_stmt 1 view .LVU9
  52              	.L3:
  53              		.loc 1 22 38 discriminator 1 view .LVU10
  54              		.loc 1 22 25 is_stmt 0 discriminator 1 view .LVU11
  55 0010 044B     		ldr	r3, .L5
  56 0012 1B68     		ldr	r3, [r3]
  57              		.loc 1 22 38 discriminator 1 view .LVU12
  58 0014 13F0400F 		tst	r3, #64
  59 0018 FAD0     		beq	.L3
  18:Core/system/usart.c ****     for (int t = 0; t < len; t++)
  60              		.loc 1 18 31 is_stmt 1 discriminator 2 view .LVU13
  61 001a 0CF1010C 		add	ip, ip, #1
  62              	.LVL3:
  63              	.L2:
  18:Core/system/usart.c ****     for (int t = 0; t < len; t++)
  64              		.loc 1 18 23 discriminator 1 view .LVU14
  65 001e 8445     		cmp	ip, r0
  66 0020 F2DB     		blt	.L4
  67              	.LBE2:
  23:Core/system/usart.c ****     }
  24:Core/system/usart.c ****   return len;
  68              		.loc 1 24 3 view .LVU15
  25:Core/system/usart.c **** }
  69              		.loc 1 25 1 is_stmt 0 view .LVU16
  70 0022 7047     		bx	lr
  71              	.L6:
  72              		.align	2
  73              	.L5:
  74 0024 00380140 		.word	1073821696
  75              		.cfi_endproc
  76              	.LFE68:
  78              		.section	.text.USART1_IRQHandler,"ax",%progbits
  79              		.align	1
  80              		.global	USART1_IRQHandler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	USART1_IRQHandler:
  86              	.LFB69:
  26:Core/system/usart.c **** #endif
  27:Core/system/usart.c **** 
  28:Core/system/usart.c **** /******************************************************************************************/
  29:Core/system/usart.c **** 
ARM GAS  /tmp/ccKkhfOO.s 			page 3


  30:Core/system/usart.c **** 
  31:Core/system/usart.c **** #if USART_EN_RX     /* 如果使能了接收 */
  32:Core/system/usart.c **** 
  33:Core/system/usart.c **** /* 接收缓冲, 最大USART_REC_LEN个字节. */
  34:Core/system/usart.c **** uint8_t g_usart_rx_buf[USART_REC_LEN];
  35:Core/system/usart.c **** 
  36:Core/system/usart.c **** /*  接收状态
  37:Core/system/usart.c ****  *  bit15，      接收完成标志
  38:Core/system/usart.c ****  *  bit14，      接收到了换行符\n，0x0d
  39:Core/system/usart.c ****  *  bit13~0，    接收到的有效字节数目
  40:Core/system/usart.c **** */
  41:Core/system/usart.c **** uint16_t g_usart_rx_sta = 0;
  42:Core/system/usart.c **** 
  43:Core/system/usart.c **** /**
  44:Core/system/usart.c ****  * @brief       串口X中断服务函数
  45:Core/system/usart.c ****  * @param       无
  46:Core/system/usart.c ****  * @retval      无
  47:Core/system/usart.c ****  */
  48:Core/system/usart.c **** void USART_UX_IRQHandler(void)
  49:Core/system/usart.c **** {
  87              		.loc 1 49 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  50:Core/system/usart.c ****     uint8_t rxdata;
  92              		.loc 1 50 5 view .LVU18
  51:Core/system/usart.c **** #if SYS_SUPPORT_OS  /* 如果SYS_SUPPORT_OS为真，则需要支持OS. */
  52:Core/system/usart.c ****     OSIntEnter();
  53:Core/system/usart.c **** #endif
  54:Core/system/usart.c **** 
  55:Core/system/usart.c ****     if (USART_UX->SR & (1 << 5))                /* 接收到数据 */
  93              		.loc 1 55 5 view .LVU19
  94              		.loc 1 55 17 is_stmt 0 view .LVU20
  95 0000 114B     		ldr	r3, .L14
  96 0002 1B68     		ldr	r3, [r3]
  97              		.loc 1 55 8 view .LVU21
  98 0004 13F0200F 		tst	r3, #32
  99 0008 1CD0     		beq	.L11
  56:Core/system/usart.c ****     {
  57:Core/system/usart.c ****         rxdata = USART_UX->DR;
 100              		.loc 1 57 9 is_stmt 1 view .LVU22
 101              		.loc 1 57 26 is_stmt 0 view .LVU23
 102 000a 0F4B     		ldr	r3, .L14
 103 000c 5A68     		ldr	r2, [r3, #4]
 104              		.loc 1 57 16 view .LVU24
 105 000e D2B2     		uxtb	r2, r2
 106              	.LVL4:
  58:Core/system/usart.c ****             /* 接收未完成? */
  59:Core/system/usart.c ****         if (rxdata == 10)    /*10 = 0x0d = \n, 10是\n的ascii码*/
 107              		.loc 1 59 9 is_stmt 1 view .LVU25
 108              		.loc 1 59 12 is_stmt 0 view .LVU26
 109 0010 0A2A     		cmp	r2, #10
 110 0012 0FD0     		beq	.L13
  49:Core/system/usart.c ****     uint8_t rxdata;
 111              		.loc 1 49 1 view .LVU27
 112 0014 10B4     		push	{r4}
ARM GAS  /tmp/ccKkhfOO.s 			page 4


 113              	.LCFI0:
 114              		.cfi_def_cfa_offset 4
 115              		.cfi_offset 4, -4
  60:Core/system/usart.c ****         {
  61:Core/system/usart.c **** 
  62:Core/system/usart.c ****             g_usart_rx_sta |= 0x8000;   /* 接收到\n, 标记接收完成了 */
  63:Core/system/usart.c ****         }
  64:Core/system/usart.c ****         else      /* 还没收到\n*/
  65:Core/system/usart.c ****         {
  66:Core/system/usart.c ****             g_usart_rx_buf[g_usart_rx_sta & 0X3FFF] = rxdata;   /* 存储数据到 g_usart_rx_buf */
 116              		.loc 1 66 13 is_stmt 1 view .LVU28
 117              		.loc 1 66 43 is_stmt 0 view .LVU29
 118 0016 0D49     		ldr	r1, .L14+4
 119 0018 0B88     		ldrh	r3, [r1]
 120 001a C3F30D00 		ubfx	r0, r3, #0, #14
 121              		.loc 1 66 53 view .LVU30
 122 001e 0C4C     		ldr	r4, .L14+8
 123 0020 2254     		strb	r2, [r4, r0]
  67:Core/system/usart.c ****             g_usart_rx_sta++;
 124              		.loc 1 67 13 is_stmt 1 view .LVU31
 125              		.loc 1 67 27 is_stmt 0 view .LVU32
 126 0022 0133     		adds	r3, r3, #1
 127 0024 9BB2     		uxth	r3, r3
 128 0026 0B80     		strh	r3, [r1]	@ movhi
  68:Core/system/usart.c **** 
  69:Core/system/usart.c ****             if (g_usart_rx_sta > (USART_REC_LEN - 1))g_usart_rx_sta = 0;/* 接收数据溢出, 重新开始接
 129              		.loc 1 69 13 is_stmt 1 view .LVU33
 130              		.loc 1 69 16 is_stmt 0 view .LVU34
 131 0028 C72B     		cmp	r3, #199
 132 002a 01D9     		bls	.L7
 133              		.loc 1 69 54 is_stmt 1 discriminator 1 view .LVU35
 134              		.loc 1 69 69 is_stmt 0 discriminator 1 view .LVU36
 135 002c 0022     		movs	r2, #0
 136              	.LVL5:
 137              		.loc 1 69 69 discriminator 1 view .LVU37
 138 002e 0A80     		strh	r2, [r1]	@ movhi
 139              	.L7:
  70:Core/system/usart.c ****         }
  71:Core/system/usart.c ****     }
  72:Core/system/usart.c **** 
  73:Core/system/usart.c **** #if SYS_SUPPORT_OS  /* 如果SYS_SUPPORT_OS为真，则需要支持OS. */
  74:Core/system/usart.c ****     OSIntExit();
  75:Core/system/usart.c **** #endif
  76:Core/system/usart.c **** }
 140              		.loc 1 76 1 view .LVU38
 141 0030 10BC     		pop	{r4}
 142              	.LCFI1:
 143              		.cfi_restore 4
 144              		.cfi_def_cfa_offset 0
 145              	.LVL6:
 146              		.loc 1 76 1 view .LVU39
 147 0032 7047     		bx	lr
 148              	.LVL7:
 149              	.L13:
  62:Core/system/usart.c ****         }
 150              		.loc 1 62 13 is_stmt 1 view .LVU40
  62:Core/system/usart.c ****         }
ARM GAS  /tmp/ccKkhfOO.s 			page 5


 151              		.loc 1 62 28 is_stmt 0 view .LVU41
 152 0034 054A     		ldr	r2, .L14+4
 153              	.LVL8:
  62:Core/system/usart.c ****         }
 154              		.loc 1 62 28 view .LVU42
 155 0036 1388     		ldrh	r3, [r2]
 156 0038 6FEA4343 		mvn	r3, r3, lsl #17
 157 003c 6FEA5343 		mvn	r3, r3, lsr #17
 158 0040 1380     		strh	r3, [r2]	@ movhi
 159 0042 7047     		bx	lr
 160              	.LVL9:
 161              	.L11:
  62:Core/system/usart.c ****         }
 162              		.loc 1 62 28 view .LVU43
 163 0044 7047     		bx	lr
 164              	.L15:
 165 0046 00BF     		.align	2
 166              	.L14:
 167 0048 00380140 		.word	1073821696
 168 004c 00000000 		.word	g_usart_rx_sta
 169 0050 00000000 		.word	g_usart_rx_buf
 170              		.cfi_endproc
 171              	.LFE69:
 173              		.global	__aeabi_ui2d
 174              		.global	__aeabi_dadd
 175              		.global	__aeabi_d2uiz
 176              		.section	.text.usart_init,"ax",%progbits
 177              		.align	1
 178              		.global	usart_init
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 183              	usart_init:
 184              	.LVL10:
 185              	.LFB70:
  77:Core/system/usart.c **** #endif
  78:Core/system/usart.c **** 
  79:Core/system/usart.c **** /**
  80:Core/system/usart.c ****  * @brief       串口X初始化函数
  81:Core/system/usart.c ****  * @param       sclk: 串口X的时钟源频率(单位: MHz)
  82:Core/system/usart.c ****  *              串口1 的时钟源来自: PCLK2 = 72Mhz
  83:Core/system/usart.c ****  *              串口2 - 5 的时钟源来自: PCLK1 = 36Mhz
  84:Core/system/usart.c ****  * @note        注意: 必须设置正确的sclk, 否则串口波特率就会设置异常.
  85:Core/system/usart.c ****  * @param       baudrate: 波特率, 根据自己需要设置波特率值
  86:Core/system/usart.c ****  * @retval      无
  87:Core/system/usart.c ****  */
  88:Core/system/usart.c **** void usart_init(uint32_t sclk, uint32_t baudrate)
  89:Core/system/usart.c **** {
 186              		.loc 1 89 1 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		.loc 1 89 1 is_stmt 0 view .LVU45
 191 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 192              	.LCFI2:
 193              		.cfi_def_cfa_offset 24
 194              		.cfi_offset 4, -24
ARM GAS  /tmp/ccKkhfOO.s 			page 6


 195              		.cfi_offset 5, -20
 196              		.cfi_offset 6, -16
 197              		.cfi_offset 7, -12
 198              		.cfi_offset 8, -8
 199              		.cfi_offset 14, -4
 200 0004 82B0     		sub	sp, sp, #8
 201              	.LCFI3:
 202              		.cfi_def_cfa_offset 32
 203 0006 0446     		mov	r4, r0
 204 0008 0E46     		mov	r6, r1
  90:Core/system/usart.c ****     uint32_t temp;
 205              		.loc 1 90 5 is_stmt 1 view .LVU46
  91:Core/system/usart.c ****     /* IO 及 时钟配置 */
  92:Core/system/usart.c ****     USART_TX_GPIO_CLK_ENABLE(); /* 使能串口TX脚时钟 */
 206              		.loc 1 92 5 view .LVU47
 207              		.loc 1 92 5 view .LVU48
 208 000a 284B     		ldr	r3, .L18
 209 000c 9A69     		ldr	r2, [r3, #24]
 210 000e 42F00402 		orr	r2, r2, #4
 211 0012 9A61     		str	r2, [r3, #24]
 212              		.loc 1 92 5 view .LVU49
  93:Core/system/usart.c ****     USART_RX_GPIO_CLK_ENABLE(); /* 使能串口RX脚时钟 */
 213              		.loc 1 93 5 view .LVU50
 214              		.loc 1 93 5 view .LVU51
 215 0014 9A69     		ldr	r2, [r3, #24]
 216 0016 42F00402 		orr	r2, r2, #4
 217 001a 9A61     		str	r2, [r3, #24]
 218              		.loc 1 93 5 view .LVU52
  94:Core/system/usart.c ****     USART_UX_CLK_ENABLE();      /* 使能串口时钟 */
 219              		.loc 1 94 5 view .LVU53
 220              		.loc 1 94 5 view .LVU54
 221 001c 9A69     		ldr	r2, [r3, #24]
 222 001e 42F48042 		orr	r2, r2, #16384
 223 0022 9A61     		str	r2, [r3, #24]
 224              		.loc 1 94 5 view .LVU55
  95:Core/system/usart.c **** 
  96:Core/system/usart.c ****     sys_gpio_set(USART_TX_GPIO_PORT, USART_TX_GPIO_PIN,
 225              		.loc 1 96 5 view .LVU56
 226 0024 224F     		ldr	r7, .L18+4
 227 0026 4FF00108 		mov	r8, #1
 228 002a CDF80480 		str	r8, [sp, #4]
 229 002e 0325     		movs	r5, #3
 230 0030 0095     		str	r5, [sp]
 231 0032 0023     		movs	r3, #0
 232 0034 0222     		movs	r2, #2
 233 0036 4FF40071 		mov	r1, #512
 234              	.LVL11:
 235              		.loc 1 96 5 is_stmt 0 view .LVU57
 236 003a 3846     		mov	r0, r7
 237              	.LVL12:
 238              		.loc 1 96 5 view .LVU58
 239 003c FFF7FEFF 		bl	sys_gpio_set
 240              	.LVL13:
  97:Core/system/usart.c ****                  SYS_GPIO_MODE_AF, SYS_GPIO_OTYPE_PP, SYS_GPIO_SPEED_HIGH, SYS_GPIO_PUPD_PU);   /* 
  98:Core/system/usart.c **** 
  99:Core/system/usart.c ****     sys_gpio_set(USART_RX_GPIO_PORT, USART_RX_GPIO_PIN,
 241              		.loc 1 99 5 is_stmt 1 view .LVU59
ARM GAS  /tmp/ccKkhfOO.s 			page 7


 242 0040 CDF80480 		str	r8, [sp, #4]
 243 0044 0095     		str	r5, [sp]
 244 0046 0023     		movs	r3, #0
 245 0048 1A46     		mov	r2, r3
 246 004a 4FF48061 		mov	r1, #1024
 247 004e 3846     		mov	r0, r7
 248 0050 FFF7FEFF 		bl	sys_gpio_set
 249              	.LVL14:
 100:Core/system/usart.c ****                  SYS_GPIO_MODE_IN, SYS_GPIO_OTYPE_PP, SYS_GPIO_SPEED_HIGH, SYS_GPIO_PUPD_PU);   /* 
 101:Core/system/usart.c **** 
 102:Core/system/usart.c ****     temp = (sclk * 1000000) / baudrate + 0.5;  /* 得到BRR, 采用四舍五入计算 */
 250              		.loc 1 102 5 view .LVU60
 251              		.loc 1 102 18 is_stmt 0 view .LVU61
 252 0054 1748     		ldr	r0, .L18+8
 253 0056 04FB00F0 		mul	r0, r4, r0
 254              		.loc 1 102 40 view .LVU62
 255 005a B0FBF6F0 		udiv	r0, r0, r6
 256 005e FFF7FEFF 		bl	__aeabi_ui2d
 257              	.LVL15:
 258 0062 0022     		movs	r2, #0
 259 0064 144B     		ldr	r3, .L18+12
 260 0066 FFF7FEFF 		bl	__aeabi_dadd
 261              	.LVL16:
 262              		.loc 1 102 10 view .LVU63
 263 006a FFF7FEFF 		bl	__aeabi_d2uiz
 264              	.LVL17:
 103:Core/system/usart.c ****     /* 波特率设置 */
 104:Core/system/usart.c ****     USART_UX->BRR = temp;       /* 波特率设置 */
 265              		.loc 1 104 5 is_stmt 1 view .LVU64
 266              		.loc 1 104 19 is_stmt 0 view .LVU65
 267 006e 134C     		ldr	r4, .L18+16
 268              	.LVL18:
 269              		.loc 1 104 19 view .LVU66
 270 0070 A060     		str	r0, [r4, #8]
 105:Core/system/usart.c ****     USART_UX->CR1 = 0;          /* 清零CR1寄存器 */
 271              		.loc 1 105 5 is_stmt 1 view .LVU67
 272              		.loc 1 105 19 is_stmt 0 view .LVU68
 273 0072 0023     		movs	r3, #0
 274 0074 E360     		str	r3, [r4, #12]
 106:Core/system/usart.c ****     USART_UX->CR1 |= 0 << 12;   /* M = 0, 1个起始位, 8个数据位, n个停止位(由USART_CR2 STOP[1:0]指定
 275              		.loc 1 106 5 is_stmt 1 view .LVU69
 276              		.loc 1 106 13 is_stmt 0 view .LVU70
 277 0076 E368     		ldr	r3, [r4, #12]
 278              		.loc 1 106 19 view .LVU71
 279 0078 E360     		str	r3, [r4, #12]
 107:Core/system/usart.c ****     USART_UX->CR1 |= 1 << 3;    /* TE = 1, 串口发送使能 */
 280              		.loc 1 107 5 is_stmt 1 view .LVU72
 281              		.loc 1 107 13 is_stmt 0 view .LVU73
 282 007a E368     		ldr	r3, [r4, #12]
 283              		.loc 1 107 19 view .LVU74
 284 007c 43F00803 		orr	r3, r3, #8
 285 0080 E360     		str	r3, [r4, #12]
 108:Core/system/usart.c **** #if USART_EN_RX  /* 如果使能了接收 */
 109:Core/system/usart.c ****     /* 使能接收中断 */
 110:Core/system/usart.c ****     USART_UX->CR1 |= 1 << 2;    /* RE = 1, 串口接收使能 */
 286              		.loc 1 110 5 is_stmt 1 view .LVU75
 287              		.loc 1 110 13 is_stmt 0 view .LVU76
ARM GAS  /tmp/ccKkhfOO.s 			page 8


 288 0082 E368     		ldr	r3, [r4, #12]
 289              		.loc 1 110 19 view .LVU77
 290 0084 43F00403 		orr	r3, r3, #4
 291 0088 E360     		str	r3, [r4, #12]
 111:Core/system/usart.c ****     USART_UX->CR1 |= 1 << 5;    /* RXNEIE = 1, 接收缓冲区非空中断使能 */
 292              		.loc 1 111 5 is_stmt 1 view .LVU78
 293              		.loc 1 111 13 is_stmt 0 view .LVU79
 294 008a E368     		ldr	r3, [r4, #12]
 295              		.loc 1 111 19 view .LVU80
 296 008c 43F02003 		orr	r3, r3, #32
 297 0090 E360     		str	r3, [r4, #12]
 112:Core/system/usart.c ****     sys_nvic_init(3, 3, USART_UX_IRQn, 2); /* 组2，最低优先级 */
 298              		.loc 1 112 5 is_stmt 1 view .LVU81
 299 0092 0223     		movs	r3, #2
 300 0094 2522     		movs	r2, #37
 301 0096 2946     		mov	r1, r5
 302 0098 2846     		mov	r0, r5
 303              	.LVL19:
 304              		.loc 1 112 5 is_stmt 0 view .LVU82
 305 009a FFF7FEFF 		bl	sys_nvic_init
 306              	.LVL20:
 113:Core/system/usart.c **** #endif
 114:Core/system/usart.c ****     USART_UX->CR1 |= 1 << 13;   /* UE = 1, 串口使能 */
 307              		.loc 1 114 5 is_stmt 1 view .LVU83
 308              		.loc 1 114 13 is_stmt 0 view .LVU84
 309 009e E368     		ldr	r3, [r4, #12]
 310              		.loc 1 114 19 view .LVU85
 311 00a0 43F40053 		orr	r3, r3, #8192
 312 00a4 E360     		str	r3, [r4, #12]
 115:Core/system/usart.c **** }
 313              		.loc 1 115 1 view .LVU86
 314 00a6 02B0     		add	sp, sp, #8
 315              	.LCFI4:
 316              		.cfi_def_cfa_offset 24
 317              		@ sp needed
 318 00a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 319              	.LVL21:
 320              	.L19:
 321              		.loc 1 115 1 view .LVU87
 322              		.align	2
 323              	.L18:
 324 00ac 00100240 		.word	1073876992
 325 00b0 00080140 		.word	1073809408
 326 00b4 40420F00 		.word	1000000
 327 00b8 0000E03F 		.word	1071644672
 328 00bc 00380140 		.word	1073821696
 329              		.cfi_endproc
 330              	.LFE70:
 332              		.global	g_usart_rx_sta
 333              		.section	.bss.g_usart_rx_sta,"aw",%nobits
 334              		.align	1
 337              	g_usart_rx_sta:
 338 0000 0000     		.space	2
 339              		.global	g_usart_rx_buf
 340              		.section	.bss.g_usart_rx_buf,"aw",%nobits
 341              		.align	2
 344              	g_usart_rx_buf:
ARM GAS  /tmp/ccKkhfOO.s 			page 9


 345 0000 00000000 		.space	200
 345      00000000 
 345      00000000 
 345      00000000 
 345      00000000 
 346              		.text
 347              	.Letext0:
 348              		.file 2 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/machine/_default_ty
 349              		.file 3 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdint.h"
 350              		.file 4 "CMSIS/Device/stm32f103xe.h"
 351              		.file 5 "Core/system/usart.h"
 352              		.file 6 "Core/system/sys.h"
ARM GAS  /tmp/ccKkhfOO.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
     /tmp/ccKkhfOO.s:19     .text._write:00000000 $t
     /tmp/ccKkhfOO.s:25     .text._write:00000000 _write
     /tmp/ccKkhfOO.s:74     .text._write:00000024 $d
     /tmp/ccKkhfOO.s:79     .text.USART1_IRQHandler:00000000 $t
     /tmp/ccKkhfOO.s:85     .text.USART1_IRQHandler:00000000 USART1_IRQHandler
     /tmp/ccKkhfOO.s:167    .text.USART1_IRQHandler:00000048 $d
     /tmp/ccKkhfOO.s:337    .bss.g_usart_rx_sta:00000000 g_usart_rx_sta
     /tmp/ccKkhfOO.s:344    .bss.g_usart_rx_buf:00000000 g_usart_rx_buf
     /tmp/ccKkhfOO.s:177    .text.usart_init:00000000 $t
     /tmp/ccKkhfOO.s:183    .text.usart_init:00000000 usart_init
     /tmp/ccKkhfOO.s:324    .text.usart_init:000000ac $d
     /tmp/ccKkhfOO.s:334    .bss.g_usart_rx_sta:00000000 $d
     /tmp/ccKkhfOO.s:341    .bss.g_usart_rx_buf:00000000 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_dadd
__aeabi_d2uiz
sys_gpio_set
sys_nvic_init
